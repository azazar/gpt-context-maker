copy: true
max-tokens: 3072
exclude-dirs: test_project
include-keywords: py,README
prompt: |
  Wait for further instructions. Here are some project information for the context.
requirements: |
  # Output Standards
  1. Specify the filename before producing code.
  2. Substitute triple backticks with "~~~" to prevent Markdown conflict.
  3. For large file changes, offer a diff-style patch code compatible with the patch utility. Don't create diffs if the full file text is shared without cuts. For renaming or copying files, provide a bash script.
  4. Keep responses short and forgo explanations due to size restrictions. Let the code clearly illustrate your point.
  5. Exclude explanations from the generated code, which should be incorporated into the project without changes.
  6. Comply with all guidelines and instructions.
  
  # Important Principles
  1. **Maintainability**: The code must be legible, compartmentalized, and well-documented. Follow accepted style guides. Use meaningful names for variables and methods. Ensure the generated code adheres to SOLID, KISS, DRY, and YAGNI principles.
  2. **Testability**: Develop the code in easily testable units with robust error handling.
  3. **Performance**: Code must be efficient, optimized, and minimize unnecessary computations.
  4. **Security**: Predict and tackle common security threats, validate and sanitize user input. Highlight possible security vulnerabilities if needed.
