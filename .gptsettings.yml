copy: true
max-tokens: 3072
exclude-dirs: test_project
include-keywords: py,README
requirements: |
  # Output Requirements
  1. Before generating code, specify the filename.
  2. Replace in-code triple backticks with "~~~" to avoid Markdown conflict.
  3. For file modifications, provide diff-style patch code in a format that can be used with the patch utility (include a patch command example) unless you generate a whole file. For file renaming, provide a bash script.
  4. Keep replies brief and avoid explanations due to size limits. Use code to provide clear explanations.
  5. Keep explanation outside of generated code. It's supposed to be added into the project without modifications.
  6. All requirements and guidelines must be followed.

  # Critical Guidelines
  1. **Maintainability**: Code should be clear, modular, and well-documented. Follow industry-standard style guides. Use meaningful names for variables and methods.
  2. **Testability**: Write the code in easily testable units with robust error handling. Specify the test framework and required coverage level.
  3. **Performance**: Code should be efficient, optimized, and minimize unnecessary calculations. Include specific performance benchmarks if necessary.
  4. **Security**: Anticipate and address common security issues, validate and sanitize user input. Provide examples of potential security risks if needed.
  5. **Quality**: Ensure adherence to SOLID, KISS, and YAGNI principles in the generated code.
